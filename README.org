* Toy rasterizer

This project is my attempt to learn rendering technique by crafting a 3d rasterizer from scratch.

The program is an interactive GUI application capable of rendering model files exported in Wavefront format (=.obj=). You can explore the various rasterizer options by interacting with the GUI.

The rasterizer runs purely on CPU, and no parallelism is added so far. Although I've employed various techniques to improve performance, the rendering is still too slow for any practical purpose.

You may also be interested in my other computer graphics project - a ray-tracer written from scratch: [[https://github.com/shouya/ray][ray]].

** Features

*** Supported features

Please note that not all features can be explored via the GUI.

- Lamp (color and position)
  + Multiple lamp support
- Mesh
  + Single/double-faced
  + World transformation
  + Optionally cast shadow
- Shader
  + Preset shaders: =PureColor=, =DiffuseShader=, =SpecularShader=, =SimpleMaterial=
  + Custom shader via =trait Shader=
- Basic shadow support
- Texture
  + Bi-linear filter
  + Nearest-pixel filter
- Rasterizer
  + Rasterization and shading pass separation
  + Multiple render modes
    - Shaded (normal)
    - Wireframe
    - Clipped triangles visualization
    - Shadow volume visualization
- Wavefront model (=.obj=) loading
  + Material support (=.mtl=)
  + Color texture support
  + Bump map support
  + Multi object/multi material in a single =obj= file

*** UI features

See the screenshot.

[[./static/ui.png?raw=true]]

Camera controls:

- Rotation: dragging (left mouse button)
- Pan: dragging (middle mouse button)
- Zoom: scroll wheel

*** Planned features

- transparency support
- build executable binaries from CI
- write a doc on guided exploration of various graphics glitches
  + z-fighting
  + [[https://stackoverflow.com/questions/3329308/perspective-projection-how-do-i-project-points-which-are-behind-camera][points behind camera projected to weird places]]
  + [[https://en.wikipedia.org/wiki/Shadow_volume#Depth_pass][camera inside shadow volume]]
  + [[https://gabrielgambetta.com/computer-graphics-from-scratch/14-textures.html#painting-a-crate][deformed texture under perspective projection]]

** Building

1. Clone this repository
2. Run =cargo run --release=

The UI is based on [[https://github.com/emilk/egui/tree/master/egui_glium][egui_glium]]. Make sure you have all its dependencies installed.

** References

Since I didn't intentionally collect articles helpful to me until some point, please be aware that the list here is incomplete.

- [[https://gabrielgambetta.com/computer-graphics-from-scratch/][Computer Graphics from Scratch by Gabriel Gambetta]]
- [[https://en.wikipedia.org/wiki/Shadow_volume][Shadow volume - Wikipedia]]
- [[https://learnwebgl.brown37.net/08_projections/projections_perspective.html][8.3 - Perspective Projections â€” LearnWebGL]]
- [[https://graphicscompendium.com/opengl/24-clipping-culling][Graphics Compendium | Graphics Pipeline Review]]

** License

GPL-2.0
